@model PagedList.IPagedList<Sunny_House.Models.Comment>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<label id="SortColumn" hidden>@ViewData["SortColumn"]</label>

<table class="table table-bordered table-striped table-responsive table-hover ReestrTable">
    <tr>
        <th style="max-height:160px;">
            @Ajax.ActionLink("Источник", "CommentShowPartial", new
                   {
                       SortBy = ViewBag.SortSource,
                       minRating = Request["minRating"],
                       maxRating = Request["maxRating"],
                       SearchStartDate = Request["SearchStartDate"],
                       SearchEndDate = Request["SearchEndDate"],
                       SourceId = Request["SourceId"],
                       SearchText = Request["SearchText"],
                       SignPersonId = Request["SignPersonId"],
                       AboutPersonId = Request["AboutPersonId"],
                       EventId = Request["EventId"],
                       ExerciseId = Request["ExerciseId"],
                       AddressId = Request["AddressId"],
                       chbAboutPerson = ViewData["chbAboutPerson"],
                       chbEvent = ViewData["chbEvent"],
                       chbEx = ViewData["chbEx"],
                       chbAddress = ViewData["chbAddress"]
                   }, new AjaxOptions { HttpMethod = "Get", InsertionMode = InsertionMode.Replace, UpdateTargetId = "updateC", LoadingElementId = "loadingImg" }, new { @id = "Source" })
            <i id="SourceArrow" class="glyphicon glyphicon-triangle-top" style="visibility:hidden"></i>
        </th>
        <th style="max-height:40px;">
            @Ajax.ActionLink("Дата", "CommentShowPartial", new
                   {
                       SortBy = ViewBag.SortDate,
                       minRating = Request["minRating"],
                       maxRating = Request["maxRating"],
                       SearchStartDate = Request["SearchStartDate"],
                       SearchEndDate = Request["SearchEndDate"],
                       SourceId = Request["SourceId"],
                       SearchText = Request["SearchText"],
                       SignPersonId = Request["SignPersonId"],
                       AboutPersonId = Request["AboutPersonId"],
                       EventId = Request["EventId"],
                       ExerciseId = Request["ExerciseId"],
                       AddressId = Request["AddressId"],
                       chbAboutPerson = ViewData["chbAboutPerson"],
                       chbEvent = ViewData["chbEvent"],
                       chbEx = ViewData["chbEx"],
                       chbAddress = ViewData["chbAddress"]
                   }, new AjaxOptions { HttpMethod = "Get", InsertionMode = InsertionMode.Replace, UpdateTargetId = "updateC", LoadingElementId = "loadingImg" }, new { @id = "Date" })
            <i id="DateArrow" class="glyphicon glyphicon-triangle-top" style="visibility:hidden"></i>
        </th>
        <th style="min-height:300px;">
            @Html.DisplayNameFor(model => model.First().Text)
        </th>
        <th style="min-width:100px;">
            @Ajax.ActionLink("Оценка", "CommentShowPartial", new
                   {
                       SortBy = ViewBag.SortRating,
                       minRating = Request["minRating"],
                       maxRating = Request["maxRating"],
                       SearchStartDate = Request["SearchStartDate"],
                       SearchEndDate = Request["SearchEndDate"],
                       SourceId = Request["SourceId"],
                       SearchText = Request["SearchText"],
                       SignPersonId = Request["SignPersonId"],
                       AboutPersonId = Request["AboutPersonId"],
                       EventId = Request["EventId"],
                       ExerciseId = Request["ExerciseId"],
                       AddressId = Request["AddressId"],
                       chbAboutPerson = ViewData["chbAboutPerson"],
                       chbEvent = ViewData["chbEvent"],
                       chbEx = ViewData["chbEx"],
                       chbAddress = ViewData["chbAddress"]
                   }, new AjaxOptions { HttpMethod = "Get", InsertionMode = InsertionMode.Replace, UpdateTargetId = "updateC", LoadingElementId = "loadingImg" }, new { @id = "Rating" })
            <i id="RatingArrow" class="glyphicon glyphicon-triangle-top" style="visibility:hidden"></i>
        </th>
        <th>
            @Ajax.ActionLink("Подпись", "CommentShowPartial", new
                   {
                       SortBy = ViewBag.SortSignPerson,
                       minRating = Request["minRating"],
                       maxRating = Request["maxRating"],
                       SearchStartDate = Request["SearchStartDate"],
                       SearchEndDate = Request["SearchEndDate"],
                       SourceId = Request["SourceId"],
                       SearchText = Request["SearchText"],
                       SignPersonId = Request["SignPersonId"],
                       AboutPersonId = Request["AboutPersonId"],
                       EventId = Request["EventId"],
                       ExerciseId = Request["ExerciseId"],
                       AddressId = Request["AddressId"],
                       chbAboutPerson = ViewData["chbAboutPerson"],
                       chbEvent = ViewData["chbEvent"],
                       chbEx = ViewData["chbEx"],
                       chbAddress = ViewData["chbAddress"]

                   }, new AjaxOptions { HttpMethod = "Get", InsertionMode = InsertionMode.Replace, UpdateTargetId = "updateC", LoadingElementId = "loadingImg" }, new { @id = "SignPerson" })
            <i id="SignPersonArrow" class="glyphicon glyphicon-triangle-top" style="visibility:hidden"></i>
        </th>

        <th><i class="glyphicon glyphicon-paperclip"></i></th>
        <th>Дополнительно</th>
        <th></th>
    </tr>

    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="10">
                <p class="text-center text-danger" style="margin-top:12px;">Записи, соответствующие критериям поиска, не найдены<p>
            </td>
        </tr>
    }

    @foreach (var item in Model)
    {
        <tr>
            <td style="vertical-align:top !important">
                @Html.DisplayFor(modelItem => item.CommentSource.SourceName)
            </td>
            <td style="text-align:center; vertical-align:top !important">
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td class="breakWord" style="max-width:300px; vertical-align:top !important; text-align:justify;">
                @Html.DisplayFor(modelItem => item.Text)
            </td>
            <td style="text-align:center; vertical-align:top !important">
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td style="vertical-align:top !important">
                @if (item.SignPersonId != 0)
                {
                    @Html.ActionLink(item.SignPersonFIO, "ShowPersons", "Home", new { PersonId = @item.SignPersonId }, new { target = "_self" })
                }
            </td>

            <td style="min-width:60px; text-align:center">
                @if (item.AttCount > 0)
                { <a href='@Url.Action("CommentDetails", "Comments", new { id = item.CommentId })' style="color:chocolate; display:block; margin-top:2px;">
                    @item.AttCount@Html.Raw("&nbsp;")<i class="glyphicon glyphicon-paperclip"></i>
                </a>
                }
            </td>

            <td style="vertical-align:top !important">
                @if (item.AboutPersonId != 0)
                {
                    <span>
                        О персоне: @Html.ActionLink(item.AboutPersonFIO, "ShowPersons", "Home", new { PersonId = @item.AboutPersonId }, new { target = "_self" })
                    </span><br />
                }

                @if (item.Event != null)
                {
                    <span>
                        О мероприятии: @Html.ActionLink(item.Event.EventName, "ResShowOfEvent", "Reserves", new { EventId = @item.Event.EventId }, new { target = "_self" })
                    </span> <br />
                }

                @if (item.Exercise != null)
                {
                    <span>
                        О занятии: @Html.ActionLink(item.Exercise.Subject, "ExDetails", "Exercises", new { ObjectId = @item.Exercise.ExerciseId }, new { target = "_self" })
                    </span> <br />
                }

                @if (item.Address != null)
                {
                    <span>
                        О месте: @Html.ActionLink(item.Address.Alias, "AdDetails", "Addresses", new { Id = @item.Address.AddressId }, new { target = "_self" })
                    </span>
                }
            </td>

            <td style="text-align:center; width:136px; min-width:134px; vertical-align:top !important">
                <a class="btn btn-default btn-sm" title="Подробная информация" href='@Url.Action("CommentDetails", "Comments", new { id = item.CommentId })'><span class="glyphicon glyphicon-info-sign"></span></a>
                <a class="btn btn-default btn-sm" title="Редактирование отзыва" href='@Url.Action("CommentEdit", "Comments", new { id = item.CommentId })'><span class="glyphicon glyphicon-edit"></span></a>
                <a class="btn btn-default btn-sm" title="Удаление отзыва" href='@Url.Action("CommentDelete", "Comments", new { id = item.CommentId })'><span class="glyphicon glyphicon-trash"></span></a>
            </td>
        </tr>

    }

</table>

@if (Model.PageCount > 0)
{
    @:<hr />
    @:Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount.
    @:Записи @Model.FirstItemOnPage - @Model.LastItemOnPage из @Model.TotalItemCount


    @Html.PagedListPager(Model, page => Url.Action("CommentShowPartial", "Comments",
                             new
                             {
                                 page,
                                 SortBy = Request["SortBy"],
                                 minRating = Request["minRating"],
                                 maxRating = Request["maxRating"],
                                 SearchStartDate = Request["SearchStartDate"],
                                 SearchEndDate = Request["SearchEndDate"],
                                 SourceId = Request["SourceId"],
                                 SearchText = Request["SearchText"],
                                 SignPersonId = Request["SignPersonId"],
                                 chbAboutPerson = ViewData["chbAboutPerson"],
                                 chbEvent = ViewData["chbEvent"],
                                 chbEx = ViewData["chbEx"],
                                 chbAddress = ViewData["chbAddress"]

                             }),
                             PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded },
                             new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "updateC" }))

}