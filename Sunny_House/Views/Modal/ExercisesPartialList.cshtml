@model PagedList.IPagedList<Sunny_House.Models.Exercise>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<table class="table ">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().Subject)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().StartTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().EndTime)
        </th>
        <th></th>
    </tr>


    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="3">
                <p class="text-center text-danger" style="margin-top:12px;">Записи, соответствующие критериям поиска, не найдены<p>
            </td>
        </tr>
    }

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Subject)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndTime)
            </td>
            <td>
                <a class="btn btn-default btn-sm selEx"
                   data-pasteitem="@ViewBag.Mode"
                   data-exid="@item.ExerciseId"
                   onclick="selsubmit(this)"
                   data-exname="@item.Subject">
                    <span class="glyphicon glyphicon-ok"></span>
                </a>
            </td>
        </tr>
    }

</table>
<hr />
Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("ExercisesPartialList", "Modal",
                                     new { ExerciseSearchString = @ViewData["ExerciseSearchString"],
                                           StartTimeS = @ViewData["StartTimeS"],
                                           EndTimeS = @ViewData["EndTimeS"],
                                           FilterDate = @ViewBag.FilterDate, 
                                           field = @ViewBag.Mode, 
                                           page }),
                             PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded },
                             new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "update" }))