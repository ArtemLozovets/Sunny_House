@model Sunny_House.Models.STask

@{
    ViewBag.Title = "Задачи - Редактирование";
}
<link href="~/Content/jquery.datetimepicker.min.css" rel="stylesheet" />

<div id="modDialog" class="modal fade">
    <div id="dialogContent" class="modal-dialog" style="width:660px;"></div>
</div>

<h2>Задачи</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Редактирование задачи</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.STaskId)
        @Html.Hidden("CurrentUser", @Context.User.Identity.Name)
        @Html.HiddenFor(model => model.CreatorId)

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfCreation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfCreation, new { htmlAttributes = new { @type = "text", @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.DateOfCreation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* Если пользователь состоит в ролях "Администратор" или "Пользователь" - разрешить редактирование темы задачи *@
                @if (User.IsInRole("Administrator") || User.IsInRole("User"))
                {
                    @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control"} }) 
                }
                else
                {
                    @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                }

                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ответственный", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="ResponsibleLabel" id="ResponsibleLabel"
                       class="form-control"
                       readonly
                       style="margin:2px 0; display:inline-block; cursor:pointer"
                       title="Щелкните для сброса"
                       onclick="PersonClear()"
                       value="@ViewData["ResponsibleFIO"]" /> 
                <a class="btn btn-default pModal" style="margin:2px 0; margin-top:-1px; display:inline-block;" href='@Url.Action("ShowModalPersons", "Modal", new { field = "ResponsibleId" })'><span class="glyphicon glyphicon-folder-open"></span></a>
                @Html.Hidden("ResponsibleId")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaskComplete, "Выполнена", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox-inline" style="height:20px;">
                    @Html.EditorFor(model => model.TaskComplete)
                    @Html.ValidationMessageFor(model => model.TaskComplete, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" title="Сохранить" class="btn btn-default"><i class="glyphicon glyphicon-floppy-save"></i> Сохранить</button>
            </div>
        </div>
    </div>
}

<div>
    <a class="btn btn-default" href='@Url.Action("TasksShow", "Tasks")'><span class="glyphicon glyphicon-circle-arrow-left"> Назад</span></a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @*Блок скриптов для работы с DateTimePicker*@
    <script src="~/Scripts/jquery.datetimepicker.full.min.js"></script>
    <script type="text/javascript">

        $.datetimepicker.setLocale('ru');

        // <![CDATA[
        jQuery(function () {
            jQuery('#Date').datetimepicker({
                format: 'd/m/Y',
                formatDate: 'd/m/Y',
                timepicker: false
            });
        });
        // ]]>

        $.validator.methods.date = function (value, element) {
            if (value) {
                try {
                    $.datepicker.parseDate('dd/mm/yy', value);
                } catch (ex) {
                    return false;
                }
            }
            return true;
        };
    </script>

<script type="text/javascript">
    $(function () {

        $(function () {
            var widthdelta = 44;
            var wd = $("#ResponsibleLabel").width() - widthdelta;
            $("#ResponsibleLabel").width(wd);
        });

        $.ajaxSetup({ cache: false });
        $(".pModal").click(function (e) {

            e.preventDefault();
            $.get(this.href, function (data) {
                $('#dialogContent').html(data);
                $('#modDialog').modal('show');
            });
        });
    });

    //Скрипт очистки значений необязательных полей
    function PersonClear() {
        $('#ResponsibleLabel').val('');
        $('#ResponsibleId').val(null);
        $('#ResponsibleLabel').blur();
    }
</script>



}





