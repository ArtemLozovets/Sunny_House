@model Sunny_House.Models.Person
@{
    ViewBag.Title = "Персоны - Добавление";
}
<link href="~/Content/jquery.datetimepicker.min.css" rel="stylesheet" />

<style>
    .adt-block {
        width: 100%;
        background-color: #eee;
        border-radius: 6px;
        padding: 10px 20px;
        margin-bottom: 10px;
    }

        .adt-block button:hover {
            background-color: #bbb;
        }

        .adt-block table {
            margin-top: 10px;
        }

            .adt-block table tr td {
                border: none;
            }
</style>


<h2><i class="fa fa-user-circle"></i> Персоны</h2>
<span hidden id="ddlBox">
    @Html.DropDownList("TypeOfCommunicationId", null, "Выберите вид связи...", htmlAttributes: new { @class = "form-control ddlComm" })
</span>
@Html.Hidden("perCommCounter", "0");
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Добавить персону</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Sex, "-Выберите пол-", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @type = "text", @class = "form-control", @data_val_date = "Проверьте правильность ввода даты (ДД/ММ/ГГГГ)" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger", @data_val_date = "Проверьте правильность ввода даты (ДД/ММ/ГГГГ)" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="adt-block">
            <label class="control-label">Средства связи</label>
            <table class="table table-condensed" id="commTable" style="width: 100%; margin-bottom: 0;">
                <thead></thead>
                <tbody></tbody>
            </table>
            <button style="margin-left:6px;" type="button" id="addPersonCommRec" title="Добавить средство связи" class="btn btn-sm btn-default"><i class="fa fa-plus"></i></button>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" title="Добавить персону" class="btn btn-default"><i class="glyphicon glyphicon-floppy-save"></i> Добавить</button>
            </div>
        </div>
    </div>
}
<div>
    <p><a class="btn btn-default" href='@Url.Action("ShowPersons", "Home")'><span class="glyphicon glyphicon-circle-arrow-left"> Назад</span></a></p>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @*Блок скриптов для работы с DateTimePicker*@
    <script src="~/Scripts/jquery.datetimepicker.full.min.js"></script>
    <script type="text/javascript">

        $.datetimepicker.setLocale('ru');

        // <![CDATA[
        jQuery(function () {
            jQuery('#DateOfBirth').datetimepicker({
                format: 'd/m/Y',
                formatDate: 'd/m/Y',
                timepicker: false
            });
        });
        // ]]>

        $.validator.methods.date = function (value, element) {
            if (value) {
                try {
                    $.datepicker.parseDate('dd/mm/yy', value);
                } catch (ex) {
                    return false;
                }
            }
            return true;
        };
    </script>
    <script>
        //Блок скриптов для работы со списком средств связи
        //Добавление записи в таблицу средств связи
        $('body').on('click', '#addPersonCommRec', function () {
            $(this).blur();
            var recNum = parseInt($('#perCommCounter').val()) + 1;
            $('#perCommCounter').val(recNum);
            var ddl = $('#ddlBox').html();
            ddl = ddl.replace(new RegExp("TypeOfCommunicationId", "g"), "ddl" + recNum);
            var recString = '<tr>';
            recString += '<td>' + ddl + '</td>';
            recString += '<td><input type="text" maxlength="50" value="" placeholder="Адрес/Номер..." class="form-control addr" /></td>';
            recString += '<td><input type="text" maxlength="100" value="" placeholder="Название..." class="form-control commName" /></td>';
            recString += '<td><input type="text" maxlength="1000" value="" placeholder="Примечание..." class="form-control note" /></td>';
            recString += '<td><button type="button" title="Подтвердить запись" class="form-control btn btn-default perCommConfirm"><i class="fa fa-check"></i></button></td>';
            recString += '<td><button type="button" title="Удалить запись" class="form-control btn btn-default perCommRemove"><i class="fa fa-remove"></i></button></td></tr>';
            $('#commTable').append(recString);
        });

        //Удаление записи из таблицы средств связи
        $('body').on('click', '.perCommRemove', function () {
            $(this).blur();
            $(this).closest('tr').remove();
        });

        //Подтверждение записи в таблице средств связи
        $('body').on('click', '.perCommConfirm', function () {
            $(this).blur();
            var TOCFlag, addrFlag, commNameFlag, noteFlag;
            var $row = $(this).closest('tr');
            var $TOC = $row.find('.ddlComm');
            var $addr = $row.find('.addr');
            var $commName = $row.find('.commName');
            var $note = $row.find('.note');

            if ($TOC.val() == '') {
                $TOC.css('background-color', 'rgba(255, 99, 132, 0.2)');
                TOCFlag = false;
            } else {
                $TOC.css('background-color', 'rgba(128, 200, 64, 0.2)');
                TOCFlag = true;
            }

            if ($addr.val().length == 0 || $addr.val().length > 50) {
                $addr.css('background-color', 'rgba(255, 99, 132, 0.2)');
                addrFlag = false;
            } else {
                $addr.css('background-color', 'rgba(128, 200, 64, 0.2)');
                addrFlag = true;
            }

            if ($commName.val().length == 0 || $commName.val().length > 100) {
                $commName.css('background-color', 'rgba(255, 99, 132, 0.2)');
                commNameFlag = false;
            } else {
                $commName.css('background-color', 'rgba(128, 200, 64, 0.2)');
                commNameFlag = true;
            }

            if ($note.val().length == 0 || $note.val().length > 1000) {
                $note.css('background-color', 'rgba(255, 99, 132, 0.2)');
                noteFlag = false;
            } else {
                $note.css('background-color', 'rgba(128, 200, 64, 0.2)');
                noteFlag = true;
            }

            if (TOCFlag && addrFlag && commNameFlag && noteFlag) {
                $TOC.attr('disabled', 'disabled');
                $addr.attr('disabled', 'disabled');
                $commName.attr('disabled', 'disabled');
                $note.attr('disabled', 'disabled');
                $(this).attr('disabled', 'disabled');
            }
            console.log(TOCFlag, addrFlag, commNameFlag, noteFlag);
        });

        //Обработчик изменения типа средства связи
        $(".ddlComm").change(function (e) {
            if ($("#TypeOfCommunicationId option:selected").text() == 'Телефон мобильный' || $("#TypeOfCommunicationId option:selected").text() == 'Viber') {
                $("#Address_Number").mask("+389999999999");
            }
            else if ($("#TypeOfCommunicationId option:selected").text() == 'Телефон стационарный') {
                $("#Address_Number").mask("+389999999999?9");
            }
            else {
                $("#Address_Number").unmask();
            }

        });

    </script>
}
