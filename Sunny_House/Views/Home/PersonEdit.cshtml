@model Sunny_House.Models.Person
@{
    ViewBag.Title = "Персоны - Редактирование";
}
<link href="~/Content/jquery.datetimepicker.min.css" rel="stylesheet" />

<h2><i class="fa fa-user-circle"></i> Персоны</h2>

<div class="row">
    <div class="col-md-6">
        <p class="text-danger" id="MessageError">  @TempData["MessageError"]</p>
    </div>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Редактирование персональных данных</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PersonId)
        @Html.HiddenFor(model => model.CreateDate)
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Sex, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @type = "text", @class = "form-control", @data_val_date = "Проверьте правильность ввода даты (ДД/ММ/ГГГГ)" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger", @data_val_date = "Проверьте правильность ввода даты (ДД/ММ/ГГГГ)" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" title="Обновить данные" class="btn btn-default"><i class="glyphicon glyphicon-floppy-save"></i> Обновить</button>
            </div>
        </div>
    </div>
}
<div>
    <p><a class="btn btn-default" href='@Url.Action("ShowPersons", "Home", new {@PersonId = @Model.PersonId})'><span class="glyphicon glyphicon-circle-arrow-left"> Назад</span></a></p>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*Блок скриптов для работы с DateTimePicker*@
    <script src="~/Scripts/jquery.datetimepicker.full.min.js"></script>
    <script type="text/javascript">

        $.datetimepicker.setLocale('ru');

        // <![CDATA[
        jQuery(function () {
            jQuery('#DateOfBirth').datetimepicker({
                format: 'd/m/Y',
                formatDate: 'd/m/Y',
                timepicker: false
            });
        });
        // ]]>

        $.validator.methods.date = function (value, element) {
            if (value) {
                try {
                    $.datepicker.parseDate('dd/mm/yy', value);
                } catch (ex) {
                    return false;
                }
            }
            return true;
        };
    </script>
}


