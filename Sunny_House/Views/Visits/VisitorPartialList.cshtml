@model PagedList.IPagedList<Sunny_House.Models.Visit>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<table class="table ModalTable">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().PersonFIO)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().RoleName)
        </th>
        <th>
            Факт.
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Note)
        </th>
        <th></th>
    </tr>

    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="4">
                <p class="text-center text-danger" style="margin-top:12px;">Записи, соответствующие критериям поиска, не найдены<p>
            </td>
        </tr>
    }

    @foreach (var item in Model)
    {
        <tr>
            <td>
                <a href="#topanchor" class="showRelPersons" data-personid="@item.VisitorId" title="Связанные персоны">@Html.DisplayFor(modelItem => item.PersonFIO)</a>
            </td>
            <td>
                @Html.DropDownList("ddl" + item.VisitId, new SelectList(ViewBag.RoleList, "RoleId", "RoleName", item.RoleId),
                                                        null,
                                                        htmlAttributes: new
                                                        {
                                                            @class = "form-control roleddl",
                                                            style = "width:120px; margin:2px 0; display:inline-block;",
                                                            data_visitid = item.VisitId,
                                                            id = "ddl" + item.VisitId
                                                        })
            </td>
            <td style="text-align:center">
                @Html.CheckBoxFor(modelItem => item.FactVisit, new { @class = "form-control CBFact", style = "width:20px; height:20px;", data_visitid = @item.VisitId })
            </td>
            <td>
                <div class="input-group" style="width:200px;">
                    @Html.TextAreaFor(modelItem => item.Note, new
                   {
                       @class = "form-control notesVIS",
                       rows = 1,
                       style = "width:200px; max-width:200px; max-height:200px; resize:vertical;",
                       data_visitid = item.VisitId,
                       id = "note" + item.VisitId
                   })
                    <span class="input-group-addon btn btn-default glyphicon glyphicon-floppy-save notesBtn" title="Сохранить" data-visitid="@item.VisitId"></span>
                </div>
            </td>
            <td>
                <a class="btn btn-default btn-sm"
                   title="Удалить"
                   href='@Url.Action("VisDelete", "Visits", new { VisitId = item.VisitId, ReturnUrl = "/Exercises/ExDetails?ObjectId=" + @item.ExerciseId })'>
                    <span class="glyphicon glyphicon-trash"></span>
                </a>
            </td>
        </tr>
    }

</table>

<hr />
Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("VisitorPartialList", "Visits",
                             new
                             {
                                 ExerciseId = ViewData["ExerciseId"],
                                 SearchString = ViewData["SearchString"],
                                 RoleSearchString = ViewData["RoleSearchString"],
                                 page
                             }),
                             PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded },
                             new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "update" }))