@using PagedList.Mvc;
@model PagedList.IPagedList<Sunny_House.Models.PersonsViewModel>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<style>
    #PPLTable tr th{
        vertical-align:middle !important;
    }
</style>

<label id="SortColumn" hidden>@ViewData["SortColumn"]</label>

<table class="table ModalTable" id="PPLTable">
    <tr>
        <th>
            @Ajax.ActionLink("Персона", "PersonsPartialList", new
       {
           SortBy = ViewBag.SortPersonFIO,
           SearchString = Request["SearchString"],
           FilterMode = Request["FilterMode"],
           ExerciseId = Request["ExerciseId"]
       }, new AjaxOptions { HttpMethod = "Get", InsertionMode = InsertionMode.Replace, UpdateTargetId = "update1", LoadingElementId = "loadingImg" }, new { @id = "PersonFIO" })
            <i id="PersonFIOArrow" class="glyphicon glyphicon-triangle-top" style="visibility:hidden"></i>
        </th>
        <th style="text-align:center; min-width:80px;">
            @Ajax.ActionLink("Воз.", "PersonsPartialList", new
       {
           SortBy = ViewBag.SortAge,
           SearchString = Request["SearchString"],
           FilterMode = Request["FilterMode"],
           ExerciseId = Request["ExerciseId"]
       }, new AjaxOptions { HttpMethod = "Get", InsertionMode = InsertionMode.Replace, UpdateTargetId = "update1", LoadingElementId = "loadingImg" }, new { @id = "Age" })
            <i id="AgeArrow" class="glyphicon glyphicon-triangle-top" style="visibility:hidden"></i>
        </th>
        <th>Примечание</th>
        <th>
            <a class="btn btn-default btn-sm"
               title="Выбрать всех персон"
               id="selAllPersons"
               onclick="selsubmit(this)">
                <span class="glyphicon glyphicon-ok"></span>
            </a>
        </th>
    </tr>
    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="4">
                <p class="text-center text-danger" style="margin-top:12px;">Записи, соответствующие критериям поиска, не найдены<p>
            </td>
        </tr>
    }
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.PersonFIO)
            </td>

            @if (item.PersonAge != null && item.PersonAge > 0)
            {
                <td style="text-align:center">
                    <span class="text-info" title="Дата рождения: @Html.DisplayFor(modelItem => item.DateOfBirth)" style="cursor:help">
                        @Html.DisplayFor(modelItem => item.PersonAge)
                    </span>
                </td>
            }
            else
            {
                <td style="text-align:center">
                    @if (item.PersonMonth != null)
                    { <span class="text-success" title="Дата рождения: @Html.DisplayFor(modelItem => item.DateOfBirth)" style="cursor:help">
                        @Html.DisplayFor(modelItem => item.PersonMonth) мес.
                    </span> }
                </td>
            }

            <td>
                @Html.DisplayFor(modelItem => item.Note)
            </td>

            <td>
                <a class="btn btn-default btn-sm selPerson"
                   title="Регистрация посещения"
                   data-personid="@item.PersonId"
                   data-roleid="@item.RoleId"
                   onclick="selsubmit(this)">
                    <span class="glyphicon glyphicon-ok"></span>
                </a>
            </td>
        </tr>
    }
</table>
<hr />
<div style="margin-left:10px;">
    Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("PersonsPartialList", "Visits",
                         new
                         {
                             SearchString = ViewData["SearchString"],
                             SortBy = Request["SortBy"],
                             FilterMode = Request["FilterMode"],
                             ExerciseId = Request["ExerciseId"],
                             page
                         }),
                                 PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded },
                                                                                         new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "update1" }))
</div>
