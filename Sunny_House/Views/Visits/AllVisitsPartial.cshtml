@model PagedList.IPagedList<Sunny_House.Models.Visit>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<label id="SortColumn" hidden>@ViewData["SortColumn"]</label>

<table class="table table-bordered table-striped table-responsive table-hover ReestrTable">
    <tr>
        <th>
            @Ajax.ActionLink("ФИО персоны", "AllVisitsPartial", new
       {
           SortBy = ViewBag.SortPersonFIO,
           SearchString = Request["SearchString"],
           RoleSearchString = Request["RoleSearchString"]
       }, new AjaxOptions { HttpMethod = "Get", InsertionMode = InsertionMode.Replace, UpdateTargetId = "update", LoadingElementId = "loadingImg" }, new { @id = "PersonFIO" })
            <i id="PersonFIOArrow" class="glyphicon glyphicon-triangle-top" style="visibility:hidden"></i>
        </th>
        <th>
            @Ajax.ActionLink("Занятие", "AllVisitsPartial", new
       {
           SortBy = ViewBag.SortExName,
           SearchString = Request["SearchString"],
           RoleSearchString = Request["RoleSearchString"]
       }, new AjaxOptions { HttpMethod = "Get", InsertionMode = InsertionMode.Replace, UpdateTargetId = "update", LoadingElementId = "loadingImg" }, new { @id = "ExName" })
            <i id="ExNameArrow" class="glyphicon glyphicon-triangle-top" style="visibility:hidden"></i>
        </th>

        <th>
            @Ajax.ActionLink("Дата", "AllVisitsPartial", new
       {
           SortBy = ViewBag.SortStartTime,
           SearchString = Request["SearchString"],
           RoleSearchString = Request["RoleSearchString"]
       }, new AjaxOptions { HttpMethod = "Get", InsertionMode = InsertionMode.Replace, UpdateTargetId = "update", LoadingElementId = "loadingImg" }, new { @id = "StartTime" })
            <i id="StartTimeArrow" class="glyphicon glyphicon-triangle-top" style="visibility:hidden"></i>
        </th>

        <th>
            @Ajax.ActionLink("Мероприятие", "AllVisitsPartial", new
       {
           SortBy = ViewBag.SortEventName,
           SearchString = Request["SearchString"],
           RoleSearchString = Request["RoleSearchString"]
       }, new AjaxOptions { HttpMethod = "Get", InsertionMode = InsertionMode.Replace, UpdateTargetId = "update", LoadingElementId = "loadingImg" }, new { @id = "EventName" })
            <i id="EventNameArrow" class="glyphicon glyphicon-triangle-top" style="visibility:hidden"></i>
        </th>

        <th>
            @Ajax.ActionLink("Роль", "AllVisitsPartial", new
       {
           SortBy = ViewBag.SortRoleName,
           SearchString = Request["SearchString"],
           RoleSearchString = Request["RoleSearchString"]
       }, new AjaxOptions { HttpMethod = "Get", InsertionMode = InsertionMode.Replace, UpdateTargetId = "update", LoadingElementId = "loadingImg" }, new { @id = "RoleName" })
            <i id="RoleNameArrow" class="glyphicon glyphicon-triangle-top" style="visibility:hidden"></i>
        </th>
        <th>Примечание</th>
        <th></th>
    </tr>

    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="4">
                <p class="text-center text-danger" style="margin-top:12px;">Записи, соответствующие критериям поиска, не найдены<p>
            </td>
        </tr>
    }
    @foreach (var item in Model)
    {
        <tr>
            <td style="vertical-align:top !important">
                @Html.ActionLink(@item.PersonFIO, "ShowPersons", "Home", new { PersonId = @item.VisitorId }, new { target = "_blank" })
            </td>
            <td style="vertical-align:top !important">
                @Html.ActionLink(@item.ExName, "ExShow", "Exercises", new { ExerciseId = @item.ExerciseId }, new { target = "_blank" })
            </td>
            <td style="text-align:center; vertical-align:top !important">
                @Html.DisplayFor(modelItem => item.StartTime)
            </td>
            <td style="max-width:100px; vertical-align:top !important">
                @Html.ActionLink(@item.EventName, "ResShowOfEvent", "Reserves", new { EventId = @item.EventId }, new { target = "_blank" })
            </td>
            <td style="vertical-align:top !important">
                @Html.DisplayFor(modelItem => item.RoleName)
            </td>
            <td class="breakWord" style="max-width:300px; vertical-align:top !important; text-align:justify;">
                @Html.DisplayFor(modelItem => item.Note)
            </td>
            <td style="text-align:center; width:92px; min-width:92px; vertical-align:top !important">
                <a class="btn btn-default btn-sm" title="Редактировать" href='@Url.Action("VisEdit", "Visits", new { VisitId = item.VisitId })'><span class="glyphicon glyphicon-edit"></span></a>
                <a class="btn btn-default btn-sm" title="Удалить" href='@Url.Action("VisDelete", "Visits", new { VisitId = item.VisitId })'><span class="glyphicon glyphicon-trash"></span></a>
            </td>
        </tr>
    }

</table>

<hr />
Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("AllVisitsPartial", "Visits",
                             new
                             {
                                 SearchString = ViewData["SearchString"],
                                 RoleSearchString = ViewData["RoleSearchString"],
                                 SortBy = Request["SortBy"],
                                 page,
                             }),
                             PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded },
                             new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "update" }))