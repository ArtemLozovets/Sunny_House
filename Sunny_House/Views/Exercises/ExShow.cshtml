@using PagedList.Mvc;
@model PagedList.IPagedList<Sunny_House.Models.Exercise>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<link href="~/Content/jquery.datetimepicker.min.css" rel="stylesheet" />

@{
    ViewBag.Title = "Занятия";

        string ReturnParam = "/Exercises/ExShow?FilterMode=" + Request.QueryString["FilterMode"];
        ReturnParam += "&SearchStartDate=" + Request.QueryString["SearchStartDate"];
        ReturnParam += "&SearchEndDate=" + Request.QueryString["SearchEndDate"];
        ReturnParam += "&SearchString=" + Request.QueryString["SearchString"];
        ReturnParam += "&page=" + Request.QueryString["page"];
}

<h2><i class="fa fa-bell"></i> Занятия</h2>

<div class="row">
    <div class="col-md-6">
        <p class="text-success"> @TempData["MessageOk"]</p>
        <p class="text-danger"> @TempData["MessageError"]</p>
    </div>
</div>

<label id="SortColumn" hidden>@ViewData["SortColumn"]</label>

@using (Html.BeginForm("ExShow", "Exercises", FormMethod.Get, new { @id = "ExForm" }))
{
    <div class="row">
        <div class="col-lg-4 col-md-4">
            @if (Request.QueryString["FilterMode"] == "Current" || Request.QueryString["FilterMode"] == null)
            {
                <p class="text-info"><strong>Режим отображения: ДЕЙСТВУЮЩИЕ</strong></p>
            }
            @if (Request.QueryString["FilterMode"] == "Archive")
            {
                <p class="text-info"><strong>Режим отображения: АРХИВНЫЕ</strong></p>
            }
            @if (Request.QueryString["FilterMode"] == "All")
            {
                <p class="text-info"><strong>Режим отображения: ВСЕ</strong></p>
            }

            @Html.RadioButton("FilterMode", "Current", true) <span>Действующие</span>@Html.Raw("&nbsp;")
            @Html.RadioButton("FilterMode", "Archive") <span> Архив</span>@Html.Raw("&nbsp;")
            @Html.RadioButton("FilterMode", "All") <span> Все</span>

        </div>
        <div class="col-lg-7 col-lg-offset-1 col-md-8">
            <br />
            <div class="input-group" style="width:510px;">
                <span class="input-group-addon">с</span>
                @Html.TextBox("SearchStartDate", null,
                new
                {
                    @style = "width:140px;",
                    @type = "text",
                    @class = "form-control ",
                    @placeholder = "Начало",
                    @title = "Дата начала занятия",
                    @data_val = "true",
                    @data_val_date = "Сообщение об ошибке"
                })
                <span class="input-group-addon" style="border-left: 0; border-right: 0;">до</span>

                @Html.TextBox("SearchEndDate", null,
                new
                {
                    @style = "width:140px;",
                    @type = "text",
                    @class = "form-control ",
                    @placeholder = "Окончание",
                    @title = "Дата окончания занятия",
                    @data_val = "true",
                    @data_val_date = "Сообщение об ошибке"
                })
                <span class="input-group-addon" style="border-left: 0; border-right: 0;"><span class="glyphicon glyphicon-filter"></span></span>

                @Html.TextBox("SearchString", null,
                new
                {
                    @style = "width:210px;",
                    @type = "text",
                    @class = "form-control ",
                    @placeholder = "Тема...",
                    @title = "Тема занятия",
                })

                <div class="input-group-btn">
                    <button type="submit" class="btn btn-toolbar groupbtn" id="applyfilter">
                        <span class="glyphicon glyphicon-search"></span>
                    </button>
                </div>
            </div>

        </div>
    </div>
    <hr />

    <p>
        <a class="btn btn-default" style="margin:2px 2px;" title="Добавить занятие" href='@Url.Action("ExCreate", "Exercises", new { @PersonId = Request.Params["PersonId"]})'><i class="fa fa-plus-circle"></i> Добавить занятие</a>
        <a class="btn btn-default" style="margin:2px 2px;" title="Обновить" href='@Url.Action("ExShow", "Exercises")'><span class="glyphicon glyphicon-refresh"></span></a>
    </p>
}


<table class="table table-bordered table-striped table-responsive table-hover ReestrTable">
    <tr>
        <th>
            @Html.ActionLink("Тема", "ExShow",
                new
                {
                    FilterMode = Request.QueryString["FilterMode"],
                    SearchStartDate = Request.QueryString["SearchStartDate"],
                    SearchEndDate = Request.QueryString["SearchEndDate"],
                    SearchString = Request["SearchString"],
                    ReturnUrl = ViewData["ReturnUrl"],
                    SortBy = ViewBag.SortSubject
                },
                    new { @id = "Subject" })@Html.Raw("&nbsp;")<i id="SubjectArrow"></i>
                </th>
                <th>
                    @Html.ActionLink("Мероприятие", "ExShow",
                new
                {
                    FilterMode = Request.QueryString["FilterMode"],
                    SearchStartDate = Request.QueryString["SearchStartDate"],
                    SearchEndDate = Request.QueryString["SearchEndDate"],
                    SearchString = Request["SearchString"],
                    ReturnUrl = ViewData["ReturnUrl"],
                    SortBy = ViewBag.SortEventName
                },
                    new { @id = "EventName" })@Html.Raw("&nbsp;")<i id="EventNameArrow"></i>
                </th>
                <th>
                    @Html.ActionLink("Начало", "ExShow",
                new
                {
                    FilterMode = Request.QueryString["FilterMode"],
                    SearchStartDate = Request.QueryString["SearchStartDate"],
                    SearchEndDate = Request.QueryString["SearchEndDate"],
                    SearchString = Request["SearchString"],
                    ReturnUrl = ViewData["ReturnUrl"],
                    SortBy = ViewBag.SortStartTime
                },
                    new { @id = "StartTime" })@Html.Raw("&nbsp;")<i id="StartTimeArrow"></i>
                </th>
                <th style="width:130px;">
                    @Html.ActionLink("Окончание", "ExShow",
                new
                {
                    FilterMode = Request.QueryString["FilterMode"],
                    SearchStartDate = Request.QueryString["SearchStartDate"],
                    SearchEndDate = Request.QueryString["SearchEndDate"],
                    SearchString = Request["SearchString"],
                    ReturnUrl = ViewData["ReturnUrl"],
                    SortBy = ViewBag.SortEndTime
                },
                    new { @id = "EndTime" })@Html.Raw("&nbsp;")<i id="EndTimeArrow"></i>
                </th>
                <th>
                    <label>Место</label>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Note)
                </th>
                <th style="width:128px; min-width:128px"></th>
            </tr>

            @if (Model.Count() == 0)
            {
                <tr>
                    <td colspan="7">
                        <p class="text-center text-danger" style="margin-top:12px;">Записи, соответствующие критериям поиска, не найдены<p>
                    </td>
                </tr>
            }

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Subject)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Event.EventName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndTime)
                    </td>
                    <td>
                        @item.Address.City, @item.Address.AddressValue
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Note)
                    </td>
                    <td style="text-align:center;">
                        <a class="btn btn-default btn-sm" title="Подробно" href='@Url.Action("ExDetails", "Exercises", new { ObjectId = item.ExerciseId, ReturnParam })'><span class="glyphicon glyphicon-info-sign"></span></a>
                        <a class="btn btn-default btn-sm" title="Редактировать" href='@Url.Action("ExEdit", "Exercises", new { ObjectId = item.ExerciseId, ReturnParam })'><span class="glyphicon glyphicon-edit"></span></a>
                        <a class="btn btn-default btn-sm" title="Удалить" href='@Url.Action("ExDelete", "Exercises", new { ObjectId = item.ExerciseId, ReturnParam })'><span class="glyphicon glyphicon-trash"></span></a>
                    </td>
                </tr>
            }

        </table>

        <hr />
        Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("ExShow", "Exercises",
                             new
                             {
                                 FilterMode = Request.QueryString["FilterMode"],
                                 SearchStartDate = Request.QueryString["SearchStartDate"],
                                 SearchEndDate = Request.QueryString["SearchEndDate"],
                                 SearchString = Request.QueryString["SearchString"],
                                 ReturnUrl = ViewData["ReturnUrl"],
                                 page,
                                 SortBy = Request["SortBy"]
                             }),
                         new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })


        @if (ViewBag.ReturnUrl != null)
        {
            <div style="margin:10px 0 0 4px;">
                <a class="btn btn-default" href='@ViewBag.ReturnUrl'><span class="glyphicon glyphicon-circle-arrow-left"> Назад</span></a>
            </div>
        }

        <a href="#" class="scrollup1">Наверх</a>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            <script src="~/Scripts/jquery.cookie-1.4.1.min.js"></script>
            <script src="~/Scripts/toparrow.js"></script>


            <script type="text/javascript">
                $(function () {
                    $.removeCookie('EventId');
                    $.removeCookie('EventLabel');
                    $.removeCookie('Subject');
                    $.removeCookie('StartTime');
                    $.removeCookie('EndTime');
                    $.removeCookie('Note');
                    $.removeCookie('ReturnUrl');
                });
            </script>

            <script type="text/javascript">
                $(function () {

                    // Сабмит формы при изменении переключателя (Через $('#FilterMode') работает только в одном положении)
                    $('input[name=FilterMode]').change(function () {
                        $('#ExForm').submit();
                    })

                    $("#SearchString").focus(); // Фокус на полі фільтра при відкритті сторінки.

                    if ($('#SortColumn').text() != '') {
                        var sortcolumnname = $('#SortColumn').text();
                        var sortcontrol = $('#' + sortcolumnname);
                        if (sortcontrol != null) {
                            if (sortcontrol.attr('href').indexOf('desc') != -1) {
                                $('#' + sortcolumnname + 'Arrow').removeClass().addClass('glyphicon glyphicon-triangle-top')
                            }
                            else {
                                $('#' + sortcolumnname + 'Arrow').removeClass().addClass('glyphicon glyphicon-triangle-bottom')
                            }
                        }
                    }

                });
            </script>

            @*Блок скриптов для работы с DateTimePicker*@
            <script src="~/Scripts/jquery.datetimepicker.full.min.js"></script>
            <script type="text/javascript">

                $.datetimepicker.setLocale('ru');

                // <![CDATA[
                jQuery(function () {
                    jQuery('#SearchStartDate').datetimepicker({
                        format: 'd/m/Y H:i',
                        formatDate: 'd/m/Y',
                        onShow: function (ct) {
                            this.setOptions({
                                maxDate: jQuery('#SearchEndDate').val() ? jQuery('#SearchEndDate').val() : false
                            })
                        },
                        timepicker: true
                    });
                    jQuery('#SearchEndDate').datetimepicker({
                        format: 'd/m/Y H:i',
                        formatDate: 'd/m/Y',
                        onShow: function (ct) {
                            this.setOptions({
                                minDate: jQuery('#SearchStartDate').val() ? jQuery('#SearchStartDate').val() : false
                            })
                        },
                        timepicker: true
                    });
                });
                // ]]>

                $.validator.methods.date = function (value, element) {
                    if (value) {
                        try {
                            $.datepicker.parseDate('dd/mm/yy', value);
                        } catch (ex) {
                            return false;
                        }
                    }
                    return true;
                };
            </script>
        }