@using PagedList.Mvc;
@model PagedList.IPagedList<Sunny_House.Models.PersonsViewModel>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().PersonFIO)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().PersonRole)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().PersonAge)
        </th>
        <th>
        </th>
    </tr>

    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="3">
                <p class="text-center text-danger" style="margin-top:12px;">Записи, соответствующие критериям поиска, не найдены<p>
            </td>
        </tr>
    }

    @foreach (var item in Model)
    {
        <tr>
            <td>
                <a href="#topanchor" class="showRelPersons" data-personid="@item.PersonId" title="Связанные персоны">@Html.DisplayFor(modelItem => item.PersonFIO)</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PersonRole)
            </td>
            @if (item.PersonAge != null && item.PersonAge > 0)
            {
                <td>
                    <span class="text-info">@Html.DisplayFor(modelItem => item.PersonAge)</span>
                </td>
            }
            else
            {
                <td>
                    @if (item.PersonMonth != null)
                    { <span class="text-success">@Html.DisplayFor(modelItem => item.PersonMonth) мес.</span> }
                </td>
            }
            <td>
                <a class="btn btn-default btn-sm" title="Информация о взаимоотношениях" href='@Url.Action("ShowRel", "Home", new { PersonId = item.PersonId })'><span class="glyphicon glyphicon-link"></span></a>
            </td>
        </tr>
    }

</table>

<hr />
Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("ResRelPersonsPartial", "Events",
                             new { EventId = Request.QueryString["EventId"], SearchString = @ViewData["SearchString"], page }),
                             PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded },
                             new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "update" }))