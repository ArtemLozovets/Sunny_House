@model Sunny_House.Models.PersonRelation

@{
    ViewBag.Title = "Добавление";
}

<h2>@ViewData["PersonName"]</h2>

<div id="modDialog" class="modal fade">
    <div id="dialogContent" class="modal-dialog"></div>
</div>

@using (Html.BeginForm("PRCreate", "PersonRelations", FormMethod.Post, new { id = "PRForm" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Добавление взаимоотношения</h4>
        <a class="btn btn-default" style="margin:2px 2px;" title="Справочник типов взаимоотношений" href='@Url.Action("RTShow", "PersonRelations")'><span class="glyphicon glyphicon-list-alt"> Справочник</span></a>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PersonId)

        <div class="form-group">
            @Html.LabelFor(model => model.RelPersonId, "Связываемая персона", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="form-inline">
                    <input type="text" name="RelPersonLabel" id="RelPersonLabel" class="form-control" disabled style="margin:2px 0; display:inline-block " value="@ViewData["RelPersonName"]" />
                    <a class="btn btn-default pModal" title="Выбрать связываемую персону" style="margin:2px 0; display:inline-block " href='@Url.Action("ShowModalPersons", "Modal", new { field = "RelPersonId"})'><span class="glyphicon glyphicon-folder-open"></span></a>
                </div>
                @Html.HiddenFor(model => model.RelPersonId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RelPersonId, null, new { @class = "text-danger", @id = "RelPersonValidator" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Relation12, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Relation12", new SelectList(ViewBag.Relation12, "RelType", "RelType"), "Тип взаимоотношения...", htmlAttributes: new { @class = "form-control", @onchange = "FillType()", @data_val = "true", @data_val_length = "Должно быть не более 50 символов", @data_val_length_max = "50", @data_val_required = "Обязательное поле" })
                @Html.ValidationMessageFor(model => model.Relation12, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Relation21, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Relation21", new SelectList(Enumerable.Empty<SelectListItem>(), "ReverseRelType", "ReverseRelType"), "Тип взаимоотношения...", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Relation21, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" title="Добавить взаимоотношение" class="btn btn-default"><i class="glyphicon glyphicon-floppy-save"></i> Добавить</button>
            </div>
        </div>
    </div>
}

<div>
    <a class="btn btn-default" href='@Url.Action("ShowRel", "Home", new { PersonId = Model.PersonId }, null)'><span class="glyphicon glyphicon-circle-arrow-left"> Назад</span></a>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(function () {
            $.ajaxSetup({ cache: false });
            $(".pModal").click(function (e) {
                e.preventDefault();
                $.get(this.href, function (data) {
                    $('#dialogContent').html(data);
                    $('#modDialog').modal('show');
                });
            });
        });

        $(function () {
            var widthdelta = 44;
            var wd = $("#RelPersonLabel").width() - widthdelta;
            $("#RelPersonLabel").width(wd);
        });


        $('#PRForm').submit(function () {
            if ($("#RelPersonId").val() == 0) {
                $("#RelPersonValidator").html("Обязательное поле");
                return false;
            }
        });


        $(function () {
            FillType();
        });

        $('#modDialog').on('hidden.bs.modal', function (event) {
            FillType();
        });


        function FillType() {
            var _reltype = $('#Relation12').val();
            var _relpersonid = $('#RelPersonId').val();
            if (_reltype != '') {
                $.ajax({
                    url: '/Modal/FillReverseRelTypeDDL',
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        RelType: _reltype,
                        RelPersonId: _relpersonid
                    },
                    success: function (ReverseRelTypes) {
                        $("#Relation21").html(""); // clear before appending new list
                        $("#Relation21").append($('<option value="">Тип взаимоотношения...</option>'));
                        $.each(ReverseRelTypes, function (i, ReverseRelTypes) {
                            $("#Relation21").append(
                                $('<option></option>').val(ReverseRelTypes).html(ReverseRelTypes));
                        });
                    }
                });
            }
        }

    </script>
}